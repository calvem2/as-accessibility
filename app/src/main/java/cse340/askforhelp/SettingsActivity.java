package cse340.askforhelp;

import android.Manifest;
import android.app.AlertDialog;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.SharedPreferences;
import android.net.Uri;
import android.os.Bundle;
import android.provider.Settings;
import android.support.v7.widget.SwitchCompat;
import android.view.View;
import android.widget.Button;
import android.widget.CompoundButton;

/* ********************************************************************************************** *
 * ********************************************************************************************** *
 *                      DO NOT EDIT THIS FILE, PLEASE, DO NOT EDIT THIS FILE                      *
 * ********************************************************************************************** *
 * ********************************************************************************************** */

public class SettingsActivity extends AbstractAFHActivity {


    /**
     * Callback that is called when the activity is first created.
     * @param savedInstanceState contains the activity's previously saved state
     */
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_settings);
        mContext = SettingsActivity.this;
        setVariables();
        setClickListeners();

        showTutorial("tutorial_settings", R.string.tutorial_settings_msg);
    }


    /**
     * Initialize any local variables for this object.
     */
    public void setVariables() {

        SwitchCompat location = findViewById(R.id.locationOnOff);
        if(getPrefs().getBoolean("mLocationOn", false) &&
                (isPermissionGranted(mContext, Manifest.permission.ACCESS_FINE_LOCATION) &&
                        isPermissionGranted(mContext, Manifest.permission.INTERNET))) {
            location.setChecked(true);
        } else {
            location.setChecked(false);
            SharedPreferences.Editor sharedPreferencesEditor = getPrefs().edit();
            sharedPreferencesEditor.putBoolean("mLocationOn", false);
            sharedPreferencesEditor.apply();
        }
    }

    /**
     * Set up all of the click listeners for all of the buttons on the screen
     * Use the parent class method to set up the settings and home buttons on the screen
     */
    public void setClickListeners() {
        super.setClickListeners();

        Button changeButton = findViewById(R.id.changeButtons);
        changeButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                Intent intent = new Intent(SettingsActivity.this, ChangeRequestsActivity.class);
                SettingsActivity.this.startActivity(intent);
            }
        });

        Button editReceivers = findViewById(R.id.editContacts);
        editReceivers.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                Intent intent = new Intent(SettingsActivity.this, ChangeContactGroupsActivity.class);
                SettingsActivity.this.startActivity(intent);
            }
        });

        Button aboutPage = findViewById(R.id.toAboutPage);
        aboutPage.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                Intent intent = new Intent(SettingsActivity.this, InfoActivity.class);
                SettingsActivity.this.startActivity(intent);
            }
        });


        final SwitchCompat location = findViewById(R.id.locationOnOff);
        location.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
            @Override
            public void onCheckedChanged(CompoundButton compoundButton, boolean b) {
           if(!isPermissionGranted(mContext, Manifest.permission.ACCESS_FINE_LOCATION) ||
            !isPermissionGranted(mContext, Manifest.permission.INTERNET)) {
               location.setChecked(false);

                AlertDialog.Builder locationDialogBuilder = new AlertDialog.Builder(mContext);
                locationDialogBuilder.setMessage(getResources().getString(R.string.location_access_needed));
                locationDialogBuilder.setPositiveButton("Yes", new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialogInterface, int i) {
                        Intent settingsIntent = new Intent(Settings.ACTION_APPLICATION_DETAILS_SETTINGS);
                        Uri uri = Uri.fromParts("package", getPackageName(), null);
                        settingsIntent.setData(uri);
                        startActivity(settingsIntent);
                        }
                });
                locationDialogBuilder.setNegativeButton("No", new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialogInterface, int i) {

                    }
                });
                AlertDialog locationDialog = locationDialogBuilder.create();
                locationDialog.show();
            }
            saveLocationSetting();
            }
        });

        Button resetTutorial = findViewById(R.id.resetTutorial);
        resetTutorial.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
            resetTutorial();
            }
        });

        Button resetAppChoice = findViewById(R.id.resetAppChoice);
        resetAppChoice.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                SharedPreferences.Editor editor = getPrefs().edit();
                editor.putString("app_package", "");
                editor.apply();
                showAlertDialog(R.string.reset_app_choice);
            }
        });

    }

    /**
     *  Reset all of the tutorial SharedPreferences and switch back to the main (home) screen
     */
    public void resetTutorial() {
        SharedPreferences.Editor editor = getPrefs().edit();
        editor.putBoolean("tutorial_first_run", true);
        editor.putBoolean("tutorial_contacts", true);
        editor.putBoolean("tutorial_settings", true);
        editor.putBoolean("tutorial_requests", true);
        editor.apply();

        showToast(R.string.tutorial_reset);
        Intent intent = new Intent(mContext, ChooseRequestsActivity.class);
        mContext.startActivity(intent);
    }

    /**
     *  If the location toggle (in Settings) is on AND the user has given permission then
     *  store the information in the SharedPreferences.
     */
    public void saveLocationSetting() {
        SwitchCompat location = findViewById(R.id.locationOnOff);

        SharedPreferences.Editor editor = getPrefs().edit();
        if (location.isChecked()) {
            editor.putBoolean("mLocationOn", true);
            editor.apply();
        } else if (!location.isChecked()){
            if (isPermissionGranted(mContext, Manifest.permission.ACCESS_FINE_LOCATION) &&
                    isPermissionGranted(mContext, Manifest.permission.INTERNET)) {
                showAlertDialog(R.string.location_off_warning);
            }

            editor.putBoolean("mLocationOn", false);
            editor.apply();
        }
    }
}